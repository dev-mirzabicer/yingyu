name: yingyu
services:
  database:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: english_app
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [yingyu-network]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d english_app"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks: [yingyu-network]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  app:
    image: ghcr.io/dev-mirzabicer/yingyu:${IMAGE_TAG:-latest}
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://user:${POSTGRES_PASSWORD}@database:5432/english_app
      CRON_SECRET: ${CRON_SECRET}
      NEXT_TELEMETRY_DISABLED: "1"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    networks: [yingyu-network]
    expose:
      - "3000"

volumes:
  postgres_data:
  redis_data:

networks:
  yingyu-network:
    driver: bridge

